1

def sort(a):
    n = len(a)
    for i in range(n-1):
        for j in range(n-i-1):
            if a[j] > a[j + 1]:
                a[j], a[j+1] = a[j+1], a[j]
    return a
a = [2, 3, 6, 8, 1, 7, 5]
print(sort(a))

2

Сложность алгоритма сортировки “Пузырьком”.
Предположим, у необходимо отсортировать массив из 10 элементов. Внешний цикл сделает 9 операций, внутренний каждый раз на интеграцию меньше т.е. 9, 8, 7, 6, … , 1. 
Всего будет произведено 9+8+7+6+5+4+3+2+1 = 45 шагов в случае если массив был отсортирован в обратную сторону. 
Получаем, что сложность примерно N^2/2, где N – количество элементов массива. В обозначении О – синтаксиса сложность равна О(N^2). 
Основной минус алгоритма сортировки “Пузырьком” – его медленная скорость.

3

def sort2(a, b):
    c = [0]*(b + 1)
    for i in range(len(a)):
        c[a[i]] = c[a[i]] + 1
    c[0] = c[0] - 1 
    for i in range(1, b + 1):
        c[i] = c[i] + c[i - 1]
    result = [None]*len(a)
    for x in reversed(a):
        result[c[x]] = x
        c[x] = c[x] - 1
    return result
from random import randint
d = [randint(0, 100) for i in range(100)]
print(d)
print(sort2(d, 100))

4

Сортировка подсчетом имеет сложность O(n+k) когда k находится в диапазоне от 1 до 1..n. 

5

import operator
def merge_sort(L, compare=operator.lt):
    if len(L) < 2:
        return L[:]
    else:
        middle = int(len(L) / 2)
        left = merge_sort(L[:middle], compare)
        right = merge_sort(L[middle:], compare)
        return merge(left, right, compare)
def merge(left, right, compare):
    result = []
    i, j = 0, 0
    while i < len(left) and j < len(right):
        if compare(left[i], right[j]):
            result.append(left[i])
            i += 1
        else:
            result.append(right[j])
            j += 1
    while i < len(left):
        result.append(left[i])
        i += 1
    while j < len(right):
        result.append(right[j])
        j += 1
    return result
from random import randint
d = [randint(0, 100) for i in range(100)]
print(d)
print(merge_sort(d)
